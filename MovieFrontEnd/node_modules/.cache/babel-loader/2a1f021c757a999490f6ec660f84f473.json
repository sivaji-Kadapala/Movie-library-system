{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mock\\\\MovieFrontEnd\\\\src\\\\components\\\\MovieForm\\\\MovieForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"./MovieForm.module.css\";\nimport { addMovie, updateMovie } from \"../../service/MovieService\";\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    state\n  } = location;\n  const [movie, setMovie] = useState({\n    name: \"\",\n    director: \"\",\n    laguage: \"\",\n    genre: \"\"\n  });\n  useEffect(() => {\n    if (state.action === \"update\") {\n      setMovie(state.movie);\n    }\n  }, [state.action, state.movie]);\n\n  const onChangeHandler = e => {\n    setMovie({ ...movie,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (state.action === \"add\") {\n      addMovie(movie).then(reponse => {\n        console.log(reponse);\n        navigate(\"/library\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n\n    if (state.action === \"update\") {\n      updateMovie(movie, state.movie.id).then(reponse => {\n        console.log(reponse);\n        navigate(\"/library\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styled.movieForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" btn-dark mt-2 pt-2 pb-2\",\n        children: state.action === \"update\" ? \"Update Movie\" : \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mb-2\",\n        class: \"was-validated\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"name\",\n            children: \"Enter Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"name\",\n            placeholder: \"Enter Name\",\n            name: \"name\",\n            onChange: onChangeHandler,\n            value: movie.name,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"valid-feedback\",\n            children: \"Valid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"invalid-feedback\",\n            children: \"Please fill out this field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"director\",\n            children: \"Enter Director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"director\",\n            placeholder: \"Enter Director\",\n            name: \"director\",\n            onChange: onChangeHandler,\n            value: movie.director,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"valid-feedback\",\n            children: \"Valid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"invalid-feedback\",\n            children: \"Please fill out this field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"language\",\n            children: \"Enter Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"language\",\n            placeholder: \"Enter Language\",\n            name: \"language\",\n            onChange: onChangeHandler,\n            value: movie.language,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"valid-feedback\",\n            children: \"Valid.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"invalid-feedback\",\n            children: \"Please fill out this field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"genre\",\n            children: \"Enter Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            id: \"genre\",\n            placeholder: \"Enter Genre\",\n            name: \"genre\",\n            onChange: onChangeHandler,\n            value: movie.genre,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"valid-feedback\",\n          children: \"Valid.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"invalid-feedback\",\n          children: \"Please fill out this field.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn btn-primary\",\n          onClick: submitHandler,\n          children: state.action === \"update\" ? \"Update Movie\" : \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieForm, \"++hxgkQ0HyDhj+KI17scEfMhJaI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = MovieForm;\nexport default MovieForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"sources":["E:/Mock/MovieFrontEnd/src/components/MovieForm/MovieForm.jsx"],"names":["React","useState","styled","addMovie","updateMovie","useNavigate","useLocation","useEffect","MovieForm","navigate","location","state","movie","setMovie","name","director","laguage","genre","action","onChangeHandler","e","target","value","submitHandler","preventDefault","then","reponse","console","log","catch","err","id","movieForm","language"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nimport styled from \"./MovieForm.module.css\";\n\nimport { addMovie, updateMovie } from \"../../service/MovieService\";\n\nimport { useNavigate , useLocation } from 'react-router-dom';\nimport { useEffect } from \"react\";\n\nconst MovieForm = () => {\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    const{state} = location;\n\n\n    const [movie, setMovie] = useState({name:\"\",director:\"\",laguage:\"\",genre:\"\"})\n\n    useEffect(()=>{\n        if(state.action===\"update\"){\n            setMovie(state.movie)\n        }\n    },[state.action,state.movie])\n\n    const onChangeHandler = (e) =>{\n        setMovie({...movie, [e.target.name]: e.target.value})\n    }\n\n    const submitHandler=(e)=>{\n\n        e.preventDefault();\n\n        if(state.action===\"add\"){\n        addMovie(movie)\n        .then(reponse=>{\n            console.log(reponse);\n            navigate(\"/library\")\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n        }\n\n        if(state.action===\"update\"){\n            updateMovie(movie, state.movie.id)\n            .then(reponse=>{\n                console.log(reponse);\n                navigate(\"/library\")\n            })\n            .catch(err=>{\n                console.log(err);\n            })\n            }\n\n    }\n\n  return (\n    <React.Fragment>\n        <div className={styled.movieForm}>\n            <div className=\" btn-dark mt-2 pt-2 pb-2\">{state.action===\"update\"?\"Update Movie\": \"Add Movie\"}</div>\n      <form className=\"mb-2\" class=\"was-validated\">\n        <div className=\"form-group\">\n          <label for=\"name\">Enter Name</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"name\"\n            placeholder=\"Enter Name\"\n            name=\"name\"\n            onChange={onChangeHandler}\n            value={movie.name} required\n          />\n          <div class=\"valid-feedback\">Valid.</div>\n          <div class=\"invalid-feedback\">Please fill out this field.</div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"director\">Enter Director</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"director\"\n            placeholder=\"Enter Director\"\n            name=\"director\"\n            onChange={onChangeHandler}\n            value={movie.director} required\n          />\n          <div class=\"valid-feedback\">Valid.</div>\n          <div class=\"invalid-feedback\">Please fill out this field.</div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"language\">Enter Language</label>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"language\"\n            placeholder=\"Enter Language\"\n            name=\"language\"\n            onChange={onChangeHandler}\n            value={movie.language} required\n          />\n          <div class=\"valid-feedback\">Valid.</div>\n          <div class=\"invalid-feedback\">Please fill out this field.</div>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"genre\">Enter Genre</label>\n          \n          <input\n            type=\"text\"\n            class=\"form-control\"\n            id=\"genre\"\n            placeholder=\"Enter Genre\"\n            name=\"genre\"\n            onChange={onChangeHandler}\n            value={movie.genre} required\n          />\n        </div>\n        <div class=\"valid-feedback\">Valid.</div>\n        <div class=\"invalid-feedback\">Please fill out this field.</div>\n        <button type=\"submit\" class=\"btn btn-primary\" onClick={submitHandler}>\n          {state.action===\"update\"?\"Update Movie\":\"Add Movie\"}\n        </button>\n      </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}